// ==UserScript==
// @name         Скрытие таблиц на странице
// @namespace    http://tampermonkey.net/
// @version      0.1
// @description  Добавляет чекбоксы для скрытия и отображения таблиц на странице
// @author       Syvorotkin Denys
// @match        https://ldz-prof-rpt.na.pg.com:88/Thingworx/Runtime/index.html?mashup=NEW_DowntimeSingle_PG_Master_V3&forceClose=true&__enableBMF=true&
// @grant        none
// ==/UserScript==

(function() {
    // Функция для скрытия или отображения элемента по его id
    function toggleElementVisibility(elementId, hide) {
        var elementToToggle = document.getElementById(elementId);
        if (elementToToggle) {
            elementToToggle.style.display = hide ? 'none' : 'table-row';
        }
    }

    // Функция для создания и добавления чекбокса
    function addHideCheckbox(checkboxLabel, elementId) {
        var checkboxContainer = document.createElement('label');
        checkboxContainer.style.fontSize = '14px';
        checkboxContainer.style.fontWeight = 'normal';
        checkboxContainer.style.marginRight = '10px';

        var checkbox = document.createElement('input');
        checkbox.type = 'checkbox';
        checkbox.style.marginRight = '5px';
        checkbox.checked = true; // Установим значение checked в true
        checkbox.addEventListener('change', function () {
            toggleElementVisibility(elementId, !this.checked); // Изменим логику скрытия
        });

        checkboxContainer.appendChild(checkbox);
        checkboxContainer.appendChild(document.createTextNode(checkboxLabel));

        return checkboxContainer;
    }

    // Функция для обработки клика на кнопку "Включить/отключить все"
    function toggleAllCheckboxes(checkboxes, toggle) {
        for (var i = 0; i < checkboxes.length; i++) {
            checkboxes[i].checked = toggle;
            var elementId = checkboxes[i].getAttribute('data-element-id');
            toggleElementVisibility(elementId, !toggle);
            checkboxes[i].dispatchEvent(new Event('change')); // Имитируем событие 'change' для обработки скрытия/отображения элементов
        }
    }

    // Создаем контейнер для чекбоксов
    var checkboxContainer = document.createElement('div');
    checkboxContainer.style.position = 'fixed';
    checkboxContainer.style.top = '155px';
    checkboxContainer.style.left = '10px';
    checkboxContainer.style.zIndex = '9999';
    checkboxContainer.style.background = '#fff';
    checkboxContainer.style.padding = '10px';
    checkboxContainer.style.border = '1px solid #ccc';
    checkboxContainer.style.borderRadius = '5px';

    // Добавляем чекбоксы для каждой пары данных и помещаем их в контейнер

    checkboxContainer.appendChild(addHideCheckbox("DO 08", "root_mashupcontainer-25_repeater-236-row-1"));
    checkboxContainer.appendChild(addHideCheckbox("DO 11", "root_mashupcontainer-25_repeater-236-row-2"));
    checkboxContainer.appendChild(addHideCheckbox("DO 01", "root_mashupcontainer-25_repeater-236-row-3"));
    checkboxContainer.appendChild(addHideCheckbox("DO 03", "root_mashupcontainer-25_repeater-236-row-4"));
    checkboxContainer.appendChild(addHideCheckbox("DA 03", "root_mashupcontainer-25_repeater-236-row-5"));
    checkboxContainer.appendChild(addHideCheckbox("DP 06", "root_mashupcontainer-25_repeater-236-row-6"));
    checkboxContainer.appendChild(addHideCheckbox("DP 11", "root_mashupcontainer-25_repeater-236-row-7"));
    checkboxContainer.appendChild(addHideCheckbox("DA 05", "root_mashupcontainer-25_repeater-236-row-8"));
    checkboxContainer.appendChild(addHideCheckbox("DP 12", "root_mashupcontainer-25_repeater-236-row-9"));
    checkboxContainer.appendChild(addHideCheckbox("DP 13", "root_mashupcontainer-25_repeater-236-row-10"));
    checkboxContainer.appendChild(addHideCheckbox("DA 01", "root_mashupcontainer-25_repeater-236-row-11"));
    checkboxContainer.appendChild(addHideCheckbox("DP 05", "root_mashupcontainer-25_repeater-236-row-12"));
    checkboxContainer.appendChild(addHideCheckbox("DA 09", "root_mashupcontainer-25_repeater-236-row-13"));
    checkboxContainer.appendChild(addHideCheckbox("DA 10", "root_mashupcontainer-25_repeater-236-row-14"));
    checkboxContainer.appendChild(addHideCheckbox("DO 07", "root_mashupcontainer-25_repeater-236-row-15"));
    checkboxContainer.appendChild(addHideCheckbox("DO 10", "root_mashupcontainer-25_repeater-236-row-16"));
    checkboxContainer.appendChild(addHideCheckbox("DP 08", "root_mashupcontainer-25_repeater-236-row-17"));
    checkboxContainer.appendChild(addHideCheckbox("DP 10", "root_mashupcontainer-25_repeater-236-row-18"));
    checkboxContainer.appendChild(addHideCheckbox("DD 01", "root_mashupcontainer-25_repeater-236-row-19"));
    checkboxContainer.appendChild(addHideCheckbox("DA 06", "root_mashupcontainer-25_repeater-236-row-20"));


    // Добавляем кнопку "Включить/отключить все"
    var toggleAllButton = document.createElement('button');
    toggleAllButton.textContent = 'Hide all';
    toggleAllButton.style.background = '#D7F5E9'; // Небесный цвет
    toggleAllButton.style.color = '#1A5CF5'; // Цвет текста как у рамки
    toggleAllButton.style.border = '2px solid #C6FCE6'; // Более синяя рамка
    toggleAllButton.style.borderRadius = '5px';
    toggleAllButton.style.padding = '5px 10px';
    var allCheckboxes = checkboxContainer.querySelectorAll('input[type="checkbox"]');
    toggleAllButton.addEventListener('click', function() {
        var toggle = false;
        for (var i = 0; i < allCheckboxes.length; i++) {
            allCheckboxes[i].checked = !allCheckboxes[i].checked;
            var elementId = allCheckboxes[i].getAttribute('data-element-id');
            toggleElementVisibility(elementId, !allCheckboxes[i].checked);
            allCheckboxes[i].dispatchEvent(new Event('change'));
            if (allCheckboxes[i].checked) {
                toggle = true;
            }
        }
        toggleAllButton.textContent = toggle ? 'Hide all' : 'Show all';
    });

    checkboxContainer.appendChild(toggleAllButton);

    // Добавляем контейнер с чекбоксами и кнопкой на страницу
    document.body.appendChild(checkboxContainer);
})();
